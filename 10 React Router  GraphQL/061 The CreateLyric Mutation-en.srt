1
00:00:00,580 --> 00:00:04,840
In the last section we put together some scaffolding for our lyric create form.

2
00:00:05,010 --> 00:00:11,250
Now that we've got the form together or at least some some scaffolding for the form I should say will

3
00:00:11,280 --> 00:00:16,230
finish putting the form together with a little bit of an on change handler on the input tag and then

4
00:00:16,230 --> 00:00:20,360
we'll talk a little bit about exactly how we're going to save a newly created lyric.

5
00:00:20,640 --> 00:00:21,600
And just a hint.

6
00:00:21,630 --> 00:00:25,320
Whenever I say create or save you want to be think in your head.

7
00:00:25,320 --> 00:00:28,130
Mutation Yes mutation.

8
00:00:28,130 --> 00:00:32,760
So let's wire up a little bit of component level state with the input right here and then we'll explore

9
00:00:32,760 --> 00:00:35,090
the mutation that we're going to use a little bit more.

10
00:00:35,700 --> 00:00:39,930
So on the input itself we need to associate some component level state.

11
00:00:39,930 --> 00:00:43,910
I'll start off by defining my constructor at the top.

12
00:00:43,920 --> 00:00:46,340
We received some props inside of here.

13
00:00:46,620 --> 00:00:52,940
We'll call the superclass with props and then we can initialize our state with this state and we'll

14
00:00:52,930 --> 00:00:58,890
see that the input is producing some piece of state that we'll call we'll call it content.

15
00:00:59,190 --> 00:01:04,850
So whenever user types in the input we're going to update the content piece of state and I'm calling

16
00:01:04,850 --> 00:01:07,800
it content right here for a very good reason.

17
00:01:07,800 --> 00:01:12,660
We'll see why in just a second when we start working on the mutation.

18
00:01:12,690 --> 00:01:18,270
Now we can add in an onchange handler to the input and also make sure that we assign a value to it as

19
00:01:18,270 --> 00:01:19,190
well.

20
00:01:19,200 --> 00:01:22,560
So inside the input I'll do a little bit of an indent because we're going to have a couple of props

21
00:01:22,560 --> 00:01:28,900
here then we'll say OK your value is always going to come from this starts data content.

22
00:01:29,100 --> 00:01:31,000
And whenever someone changes your value.

23
00:01:31,050 --> 00:01:36,630
So whenever these types something in here we're going to take the event and we'll say this Dot said

24
00:01:36,630 --> 00:01:43,630
state and we'll set the content piece of state to be event.

25
00:01:43,680 --> 00:01:49,410
Target dot value like so.

26
00:01:49,480 --> 00:01:49,710
All right.

27
00:01:49,710 --> 00:01:50,960
This is looking pretty good.

28
00:01:51,160 --> 00:01:54,390
Let's do a quick test in the browser to make sure that we're going the right direction.

29
00:01:54,490 --> 00:01:56,080
Refresh the page.

30
00:01:56,080 --> 00:02:00,100
I can type stuff in and I don't get any errors or anything like that so I'm feeling pretty good about

31
00:02:00,100 --> 00:02:05,740
the form so far which definitely makes me think that we need to move on to actually having similar to

32
00:02:05,740 --> 00:02:09,980
submit the form and then save our data to our backend.

33
00:02:10,030 --> 00:02:16,480
So first we need to detect the form itself getting submitted and we've tackled this once before in this

34
00:02:16,480 --> 00:02:18,070
exact same project.

35
00:02:18,190 --> 00:02:22,720
All we have to do is add in on submit handler to the form itself.

36
00:02:22,750 --> 00:02:29,350
So I take my form and add an on submit event handler and whenever someone tries to submit this form

37
00:02:29,590 --> 00:02:36,690
we'll call the event handler on submit and we'll bind this as well.

38
00:02:36,730 --> 00:02:43,480
Now we need to make sure that we define that event handler will receive the event that the form's mission

39
00:02:43,480 --> 00:02:44,260
gets called with.

40
00:02:44,260 --> 00:02:50,290
Remember when we tried to submit is HTML forms the browser automatically attempts to submit it to our

41
00:02:50,300 --> 00:02:53,700
backend which is a behavior that we do not want to have.

42
00:02:54,010 --> 00:03:00,440
So we're going to do that very classic prevent default like so.

43
00:03:00,850 --> 00:03:01,290
All right.

44
00:03:01,290 --> 00:03:04,590
So I think that that's pretty much it for the re-act side of things.

45
00:03:04,630 --> 00:03:07,300
So now we get to focus back on to the.

46
00:03:07,440 --> 00:03:13,120
Well side in the Apollo side of things again this is something that we've done pretty closely before

47
00:03:13,490 --> 00:03:19,600
using a form to submit this thing having a submit handler and then calling some mutation in here and

48
00:03:19,600 --> 00:03:21,630
submitting our data to the back end.

49
00:03:21,640 --> 00:03:23,220
So this feels familiar.

50
00:03:23,230 --> 00:03:24,240
Fantastic.

51
00:03:24,310 --> 00:03:24,880
That's good.

52
00:03:24,880 --> 00:03:27,880
It's something that we've done pretty closely already.

53
00:03:27,880 --> 00:03:29,710
So we need to set up our mutation in here.

54
00:03:29,740 --> 00:03:34,930
Remember our strategy for whenever we use a mutation we always check out graphical first.

55
00:03:35,200 --> 00:03:37,940
We test out our mutation and graphical gives.

56
00:03:37,990 --> 00:03:42,880
And that gives us something that we can very easily copy paste as a mutation over to this component

57
00:03:42,880 --> 00:03:48,640
file and we'll have a pretty reasonable feeling or a pretty strong feeling that it's going to work the

58
00:03:48,640 --> 00:03:49,780
first time we try it.

59
00:03:49,960 --> 00:03:53,120
So always testing out with graphical is a great way to go.

60
00:03:53,560 --> 00:03:58,780
So I got to flip over to graphical and we'll look at a little bit of our documentation.

61
00:03:58,780 --> 00:04:02,940
We'll see what we have to work with in terms of adding a lyric to a song.

62
00:04:03,280 --> 00:04:09,940
So I go back to the documentation explore and I'm going to find my mutation route type and we'll look

63
00:04:09,940 --> 00:04:12,880
at all the different mutations we have available.

64
00:04:13,030 --> 00:04:15,040
So we've used ad song and delete song.

65
00:04:15,220 --> 00:04:19,010
I bet you can really guess what we're going to use here.

66
00:04:19,180 --> 00:04:21,130
So add lyric to song.

67
00:04:21,280 --> 00:04:25,260
Yeah definitely sounds like it's something appropriate for us to use.

68
00:04:25,300 --> 00:04:28,960
It looks like we have to provide some content value as a string.

69
00:04:28,960 --> 00:04:34,510
And just to be clear that's why we called our state inside the component content called content because

70
00:04:34,510 --> 00:04:39,820
that's what the lyric mutation is expecting and it's just nice to keep some very consistent terminology

71
00:04:40,090 --> 00:04:42,920
although it doesn't necessarily have to be the same.

72
00:04:42,940 --> 00:04:47,770
We also interestingly have to provide the song ID as well.

73
00:04:47,770 --> 00:04:54,400
So we need to know which song we are adding this lyric to remember every single song has its own separate

74
00:04:54,400 --> 00:04:55,580
collection of lyrics.

75
00:04:55,720 --> 00:04:59,210
So we have to tell her back end server up here is this new lyric.

76
00:04:59,230 --> 00:05:04,330
Here's the line here's what's supposed to be and I want you to associate it with boom.

77
00:05:04,420 --> 00:05:06,120
This song right here.

78
00:05:06,280 --> 00:05:11,080
And you also notice that it looks like we can get back a song type from this mutation which is a little

79
00:05:11,080 --> 00:05:12,430
bit unexpected.

80
00:05:12,460 --> 00:05:19,540
I kind of imagine that if I was creating a lyric I kind of feel like I should get back a lyric from

81
00:05:19,540 --> 00:05:21,130
the song but ok.

82
00:05:21,220 --> 00:05:23,080
You know that's fine.

83
00:05:23,080 --> 00:05:28,120
The song type is the return type here for a very specific reason which we'll see you once we start showing

84
00:05:28,120 --> 00:05:33,810
our list of lyrics on the screen so we'll get back to this part right here.

85
00:05:33,850 --> 00:05:40,370
So let's put this mutation together inside of our query Ed..

86
00:05:40,630 --> 00:05:44,490
I still have the song right here from previous ID.

87
00:05:44,620 --> 00:05:49,640
If you do not have any ideas to work with because remember we do need a real song ID to work with here

88
00:05:49,660 --> 00:05:51,670
if we're going to add a lyric to a song.

89
00:05:51,730 --> 00:05:56,500
So I'm just going to assume that maybe you don't have a spare idea sitting around just as a reminder

90
00:05:56,560 --> 00:06:04,000
we can grab all of our ideas from all of our songs by writing a query like so I'll run the query and

91
00:06:04,000 --> 00:06:04,260
then.

92
00:06:04,270 --> 00:06:04,620
OK.

93
00:06:04,630 --> 00:06:05,020
Great.

94
00:06:05,020 --> 00:06:07,900
It gives me an idea to work with right here.

95
00:06:07,900 --> 00:06:12,110
So we are going to add one lyric to this song right here.

96
00:06:12,130 --> 00:06:18,190
Whichever one says I'm going to bring up my query variables panel and when to paste it in there is the

97
00:06:18,190 --> 00:06:19,000
ID.

98
00:06:19,180 --> 00:06:25,180
And I'm also going to add in a second query that a valid excuse me a second query variable that will

99
00:06:25,180 --> 00:06:33,250
serve as our content query variable will say that this line for the song will be something like it was

100
00:06:33,250 --> 00:06:37,330
a long night or so.

101
00:06:37,420 --> 00:06:38,790
Again I'm not a songwriter.

102
00:06:38,800 --> 00:06:44,290
Hopefully hopefully you all out there are thinking of better songs than I am or you some song that you

103
00:06:44,290 --> 00:06:49,920
know of I don't want to resort to using some Taylor Swift lyrics in here or anything like that anyways.

104
00:06:50,410 --> 00:06:55,330
So we've got our ID and our content which is exactly what our mutation expects.

105
00:06:55,330 --> 00:06:58,310
We've got the content and song ID.

106
00:06:58,820 --> 00:07:01,000
Oh looks like we've got a little bit of a typo.

107
00:07:01,030 --> 00:07:03,040
I specified it in here as the ID.

108
00:07:03,070 --> 00:07:05,950
In fact it should be a song Id.

109
00:07:06,160 --> 00:07:13,160
So I want to make sure I mean to sing correctly and I'm just going double check the capitalization OK.

110
00:07:13,190 --> 00:07:14,480
ID is not capitalized.

111
00:07:14,480 --> 00:07:15,730
I apologize for that.

112
00:07:16,070 --> 00:07:16,340
OK.

113
00:07:16,340 --> 00:07:17,420
So that's looking better.

114
00:07:17,420 --> 00:07:20,600
So now we can write out our mutation will finally get around to it.

115
00:07:20,630 --> 00:07:25,230
We're going to use the now familiar syntax where we use the muties mutation keyword.

116
00:07:25,580 --> 00:07:26,960
We will name the mutation.

117
00:07:26,960 --> 00:07:33,080
So add lyric to a song as a reminder the name of the mutation can be anything that we want.

118
00:07:33,080 --> 00:07:37,740
I'm just choosing to keep it same as the underlying mutation that we're running.

119
00:07:37,850 --> 00:07:44,630
We'll then tell this mutation that it should expect to receive two separate variables it should expect

120
00:07:44,630 --> 00:07:53,500
to receive a content variable content which is going to be a string and then we're also going to expect

121
00:07:53,500 --> 00:08:03,070
to receive a song ID variable which will be of type ID ID with a capital D.

122
00:08:03,070 --> 00:08:05,840
One thing I want to point out about the ID type in.

123
00:08:05,890 --> 00:08:12,190
Well ID inside of graph Cuil is usually capitalized both characters so capital like capital D but you'll

124
00:08:12,190 --> 00:08:15,640
see in a lot of code that we write we do not capitalize D.

125
00:08:15,670 --> 00:08:21,070
So I just want to point that out and make sure that your eyes are staying pretty close to the capitalization

126
00:08:21,100 --> 00:08:23,560
of the D in ID.

127
00:08:24,580 --> 00:08:31,720
So then we can call the actual mutation itself add lyrics to song the content that we want to use will

128
00:08:31,720 --> 00:08:38,890
come from the content query variable and the song Id that we want to use will come from the song Id

129
00:08:38,980 --> 00:08:45,880
query Very well then inside of here will ask for some details about the song that gets returned because

130
00:08:45,880 --> 00:08:51,070
remember the added lyric to some mutation returns a song not a lyric.

131
00:08:51,070 --> 00:08:58,030
So right now I think I'm happy saying yeah give me the idea of a song and we'll also ask for the lyrics

132
00:08:58,360 --> 00:09:03,400
associated with your song and maybe just give me the content of each one.

133
00:09:03,460 --> 00:09:07,110
So we haven't spoken too much about the lyric data type yet.

134
00:09:07,150 --> 00:09:11,020
We've been talking a lot about the song but not quite so much about lyrics.

135
00:09:11,050 --> 00:09:15,670
So if you're curious about where I'm pulling these properties from Remember you can always open up the

136
00:09:15,670 --> 00:09:17,410
documentation panel here.

137
00:09:17,560 --> 00:09:22,770
You can look at a song type and you'll notice that every song has a collection of lyrics.

138
00:09:22,810 --> 00:09:29,230
So I can ask for all of these different lyrics and each side of each lyric I can ask for the content

139
00:09:29,470 --> 00:09:35,240
the song that it is associated with the number of likes it has in the ID of the lyric itself.

140
00:09:35,260 --> 00:09:40,000
So even though I'm not necessarily enumerating all these properties to you ahead of time you always

141
00:09:40,000 --> 00:09:45,250
have the option of opening up the documentation panel and taking a look at what properties are available

142
00:09:45,250 --> 00:09:48,300
on each of these types yourself.

143
00:09:48,560 --> 00:09:49,850
This is looking pretty good.

144
00:09:50,140 --> 00:09:53,520
Let's run this mutation and see what happens.

145
00:09:53,620 --> 00:09:58,320
I'll run it and it looks like we had some good level of success.

146
00:09:58,390 --> 00:10:04,390
So this is the idea of the song that we added a lyric to then this is a collection of all the lyrics

147
00:10:04,390 --> 00:10:06,300
that are associated with that song.

148
00:10:06,520 --> 00:10:12,450
So the only lyric that we have which is the one we just added as content of it was a long night.

149
00:10:12,750 --> 00:10:13,210
OK.

150
00:10:13,300 --> 00:10:14,800
This is looking pretty good.

151
00:10:14,890 --> 00:10:18,760
So we've definitely got a working mutation right here to go with.

152
00:10:18,880 --> 00:10:23,410
Let's take this mutation and we're going to copy it over to our component.

153
00:10:23,410 --> 00:10:29,270
So I'm going to take the whole big mutation copy it and then I'm going to go back to my code editor.

154
00:10:29,350 --> 00:10:32,130
I'm still inside of lyric create right here.

155
00:10:32,400 --> 00:10:41,410
And you go down to the bottom and we'll say conc mutation is geeky Well we'll place our back ticks and

156
00:10:41,410 --> 00:10:45,160
place the mutation side of their OK.

157
00:10:45,220 --> 00:10:46,450
So that's looking pretty good.

158
00:10:46,450 --> 00:10:49,940
I feel I've got a pretty good feeling about this mutation.

159
00:10:49,960 --> 00:10:56,190
Now we also have to make sure we import the GQ library and associate the mutation with lyric create.

160
00:10:56,200 --> 00:10:59,240
So let's take care of those two tasks inside the next section.

