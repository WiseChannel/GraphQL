1
00:00:00,790 --> 00:00:06,640
We just finished doing a little bit of wrangling I would say with graft well to fetch the particular

2
00:00:06,640 --> 00:00:12,610
song that is reflected in the ID of our application or see me the URL of our application.

3
00:00:12,880 --> 00:00:18,250
We're about raid's make use of the song that has been fetched now inside of our song detailed component.

4
00:00:18,250 --> 00:00:23,950
I don't think we have to do a lot with a song we mostly just have to show the title of the song as a

5
00:00:23,950 --> 00:00:26,530
header to the component.

6
00:00:26,530 --> 00:00:30,300
We can find these songs title on the song title property.

7
00:00:30,310 --> 00:00:33,690
So I think that we've probably got a good direction to move forward in.

8
00:00:33,700 --> 00:00:38,200
I going to flip back over to my code editor and find my song detail component.

9
00:00:38,640 --> 00:00:41,680
And I don't really need the console log any in here anymore.

10
00:00:41,710 --> 00:00:44,110
So I can do a little bit of cleanup.

11
00:00:44,590 --> 00:00:50,470
Now before we just dive right into making use of the song on that prop object I want to remind you that

12
00:00:50,470 --> 00:00:51,590
it's very common.

13
00:00:51,640 --> 00:00:58,030
Well I should say always common for our component right here to attempt to show data before any data

14
00:00:58,030 --> 00:00:59,120
has been fetched.

15
00:00:59,290 --> 00:01:04,930
So we always have to remember to handle the case in which the song has not yet been fetched by our query

16
00:01:06,250 --> 00:01:13,260
to do so we can add in a little check to see if the song exists yet on our prop's object.

17
00:01:13,300 --> 00:01:18,820
I mean first does structure the song off of our props start data object because I expect that we'll

18
00:01:18,820 --> 00:01:23,130
be making reference to the song several times throughout this render function.

19
00:01:23,200 --> 00:01:32,100
So I will say look for the song property it should be coming from this props and data like so then we

20
00:01:32,100 --> 00:01:37,520
can say if no song yet exists then the song must still be loading.

21
00:01:37,530 --> 00:01:43,400
Note that we could also look at the props Dodd is loading property like we did previously.

22
00:01:43,650 --> 00:01:48,490
Remember the request says EHRSSON not loading but just loading property.

23
00:01:48,510 --> 00:01:49,720
We did that previously.

24
00:01:49,740 --> 00:01:53,100
We looked at loading to say OK is this request still pending.

25
00:01:53,130 --> 00:01:58,540
We absolutely can look at either the loading property or just look at the song property directly.

26
00:01:58,560 --> 00:02:03,610
It's really up to you which way you want to go if you're fetching multiple records.

27
00:02:03,750 --> 00:02:06,200
Maybe it makes sense to go with loading a little bit more.

28
00:02:06,220 --> 00:02:07,070
You know I don't know.

29
00:02:07,110 --> 00:02:09,260
It's really your own personal call.

30
00:02:09,300 --> 00:02:14,580
In general if I'm going to reference the piece of data that I'm looking for then I'm probably just going

31
00:02:14,580 --> 00:02:20,340
to make sure that that thing exists and use that as a deciding factor in whether or not I want to show

32
00:02:20,340 --> 00:02:22,570
some loading text.

33
00:02:22,740 --> 00:02:28,380
So I will say that if there is not yet a song available so the query is still pending I will return

34
00:02:28,410 --> 00:02:33,920
early from the render function and I will show loading.

35
00:02:33,970 --> 00:02:39,770
Like so this is a great opportunity right here by the way to maybe show a spinner on the screen.

36
00:02:39,780 --> 00:02:41,310
That's a great use case.

37
00:02:41,310 --> 00:02:46,440
You can also decide that you don't want to show the user anything at all because if the loading process

38
00:02:46,470 --> 00:02:52,470
is very fast as it certainly is for us this loading text right here is only going to appear on the screen

39
00:02:52,470 --> 00:02:57,260
for like a split second which is kind of a little bit unnerving for a user.

40
00:02:57,420 --> 00:03:02,880
So if you wanted to you could always just put an empty div out there and not worry about showing any

41
00:03:02,880 --> 00:03:03,780
text at all.

42
00:03:03,810 --> 00:03:05,910
But I want to make sure that you know how to show something.

43
00:03:05,910 --> 00:03:08,300
If you want to.

44
00:03:08,610 --> 00:03:12,100
OK so now we can focus on the H-3 itself.

45
00:03:12,300 --> 00:03:18,600
I want to show the title of the song that we have fetched song which remove the text in there and then

46
00:03:18,600 --> 00:03:20,680
replace it with song that title like.

47
00:03:20,680 --> 00:03:26,190
So I think that's probably pretty good for getting the title to show up on the screen.

48
00:03:26,340 --> 00:03:30,360
Let's do a quick test to make sure that everything is working the way we expect.

49
00:03:30,750 --> 00:03:38,060
So refresh the page and I get the title of the song on the screen and you'll notice that yeah loading

50
00:03:38,070 --> 00:03:43,110
is popping up there for like a split second Sometimes you can just barely see it because the load time

51
00:03:43,140 --> 00:03:46,540
is just blindingly fast again.

52
00:03:46,560 --> 00:03:50,560
It's really up to you if you want to not show any text in here at all.

53
00:03:50,580 --> 00:03:56,250
If I was working on this as my own personal project I would definitely not be showing any text here

54
00:03:56,280 --> 00:04:00,740
because I really think that it's more annoying for the user to see that flash than anything else.

55
00:04:00,750 --> 00:04:04,760
But really again up to your personal preference.

56
00:04:05,030 --> 00:04:06,180
So this is looking pretty good.

57
00:04:06,180 --> 00:04:09,910
There's one last little piece of bookkeeping that I want to take care of inside of here.

58
00:04:10,050 --> 00:04:16,160
I would really like to make sure that the user has the ability to click on like a back button appear

59
00:04:16,230 --> 00:04:22,260
to go back to the list of songs and I would also like to make sure that our song list component gives

60
00:04:22,260 --> 00:04:28,370
our users the ability to navigate to a song detail page for every song that has been fetched.

61
00:04:28,410 --> 00:04:32,400
So let's take care of both those navigation challenges in the next section.

