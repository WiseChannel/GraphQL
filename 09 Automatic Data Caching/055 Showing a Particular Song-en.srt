1
00:00:00,750 --> 00:00:02,910
We made some good progress on our application.

2
00:00:02,910 --> 00:00:07,470
So I think we're at a good point where we should think a little bit about where we are and what to work

3
00:00:07,470 --> 00:00:08,840
on next.

4
00:00:09,450 --> 00:00:13,710
Here's some mock up that we've been working with so far and we've definitely completed the song list

5
00:00:13,710 --> 00:00:16,540
component in the song create component.

6
00:00:16,680 --> 00:00:23,130
So we're probably onto the last screen of our application which is the song detail page.

7
00:00:23,220 --> 00:00:28,950
Remember the purpose of the song detail page is to show us all the lyrics associated with a given song

8
00:00:29,850 --> 00:00:36,480
the song detail page will have a list of lyrics by the lyric list component and we'll also show us a

9
00:00:36,480 --> 00:00:41,370
form to add new lyrics which we're going to call lyric create.

10
00:00:41,370 --> 00:00:48,150
So I think that the best plan is going to be to go with creating the lyric create component just because

11
00:00:48,180 --> 00:00:51,480
we don't really have any lyrics tied to any songs just yet.

12
00:00:51,480 --> 00:00:57,460
And so we can't really show a list of lyrics without first having the ability to create them.

13
00:00:57,480 --> 00:01:02,910
So I think we'll go with creating the song detail component and then place the lyric create inside of

14
00:01:02,910 --> 00:01:03,500
it.

15
00:01:03,780 --> 00:01:05,460
So that's going to be our plan going forward.

16
00:01:05,460 --> 00:01:07,870
Let's get started right now.

17
00:01:08,630 --> 00:01:10,880
We're going to flip over to my code editor.

18
00:01:11,340 --> 00:01:16,440
I'm going to close out some the files I've got in here really quick and I'm going to create a new file

19
00:01:16,440 --> 00:01:25,300
inside of my components directory which I'm going to call song detail number song detail is all about

20
00:01:25,300 --> 00:01:28,840
showing the details of a very particular song.

21
00:01:28,990 --> 00:01:32,170
So I don't expect there to be a ton of markup in this component.

22
00:01:32,170 --> 00:01:37,480
I don't think it's going to do too much besides just showing the lyric list component and lyric creators

23
00:01:39,280 --> 00:01:45,520
at the top will import react and I don't really expect to make use of component level state inside of

24
00:01:45,520 --> 00:01:49,750
this thing going to make it a class based component anyways.

25
00:01:49,750 --> 00:01:53,680
Again I really like to just use class based components no matter what.

26
00:01:53,950 --> 00:01:59,470
As opposed to functional components just because it allows me to more easily put together helper methods

27
00:01:59,500 --> 00:02:00,920
if I feel like I need them.

28
00:02:03,340 --> 00:02:12,730
So make our song detail extends component with a fire render method books render method and I'm going

29
00:02:12,730 --> 00:02:21,790
to immediately export the component so export default song detail like so in the render method will

30
00:02:21,790 --> 00:02:24,460
put a little bit of default markup in here right now.

31
00:02:24,520 --> 00:02:35,230
So I'll say return I'm going to place a div for now and let's give it a full 3D will say song detail

32
00:02:35,220 --> 00:02:36,760
for right now at the top.

33
00:02:36,990 --> 00:02:40,880
Ideally this is going to have the name of the song that we're looking at.

34
00:02:40,980 --> 00:02:46,340
But we start to kind of figure out exactly how we're going to get the relevant song inside this component.

35
00:02:46,500 --> 00:02:51,330
So we'll just leave that hard coded to say song detail right now.

36
00:02:51,340 --> 00:02:54,770
OK I think this is enough boilerplate to at least get started.

37
00:02:54,870 --> 00:03:00,990
I want to flip over to our router file now and associate this song detailer component with the re-act

38
00:03:00,990 --> 00:03:03,420
router code that we've got put together.

39
00:03:03,570 --> 00:03:08,350
So I'm gonna open up my index file inside of the client directory.

40
00:03:08,670 --> 00:03:13,020
I will import the song detail component that we just created.

41
00:03:13,140 --> 00:03:24,930
So import song detail from component's song detail like so and I'll need to assign a route for this

42
00:03:24,930 --> 00:03:25,790
new component.

43
00:03:25,950 --> 00:03:29,700
So I'm going to make a new route underneath the existing one that we have.

44
00:03:29,700 --> 00:03:34,860
Now I want to think just a little bit about exactly what path we should use for this.

45
00:03:34,860 --> 00:03:39,660
I think that will follow restful conventions as far as the you are l goes which would be to say that.

46
00:03:39,690 --> 00:03:44,940
Okay I'm going to do something with my list of songs so I'm going to use the words songs.

47
00:03:45,120 --> 00:03:48,140
And then I want to know which song I'm attempting to view.

48
00:03:48,210 --> 00:03:53,280
So we're going to reflect the idea of the song that we're trying to show to the user inside the you

49
00:03:53,290 --> 00:03:59,310
are l and this is going to allow our users to easily share and copy paste links to various specific

50
00:03:59,310 --> 00:04:00,710
songs.

51
00:04:00,780 --> 00:04:07,500
So I'll say that whenever someone goes to the song and detail page they'll see songs slash and then

52
00:04:07,500 --> 00:04:10,430
the idea of the song that they're trying to visit

53
00:04:13,750 --> 00:04:22,260
will define the component to be song detail and close the tag off like so just as a reminder this is

54
00:04:22,260 --> 00:04:28,950
how we define a parameter or wild card or pretty much variable inside of our you are with re-act router

55
00:04:29,430 --> 00:04:37,710
because we defined ID right here with the colon our song detail component will receive a prop's parameter

56
00:04:37,970 --> 00:04:45,030
or should say a parameter in the prop's object that contains ID or whatever the value of ideas right

57
00:04:45,030 --> 00:04:45,510
here.

58
00:04:45,690 --> 00:04:53,370
So if a user goes to songs slash five that would match the five to ID right here and we could look into

59
00:04:53,370 --> 00:04:55,020
the prop's object and see that.

60
00:04:55,070 --> 00:04:55,570
OK yeah.

61
00:04:55,590 --> 00:04:58,000
They're trying to visit song with I-85.

62
00:04:58,320 --> 00:05:02,430
So this idea parameter right here is going to be very helpful when we're trying to figure out which

63
00:05:02,430 --> 00:05:04,140
song we want to show to the user.

64
00:05:05,750 --> 00:05:06,050
All right.

65
00:05:06,050 --> 00:05:10,570
I think the last step is going to be to test this new component out inside of the browser.

66
00:05:10,910 --> 00:05:15,020
So I'm going to check my terminal make sure that I don't have any airs over here.

67
00:05:15,100 --> 00:05:16,960
Yup looks good.

68
00:05:16,980 --> 00:05:21,500
I mean I open up my browser on still a local host 4000.

69
00:05:21,500 --> 00:05:23,960
I'm going to go to songs slash.

70
00:05:23,990 --> 00:05:25,660
We can go to song slash anything.

71
00:05:25,820 --> 00:05:27,350
I'm going to say song slash one.

72
00:05:27,350 --> 00:05:33,170
We don't have a song with ID one right now but we really just need some character in that spot right

73
00:05:33,170 --> 00:05:35,650
there for reactor outer to match against.

74
00:05:35,990 --> 00:05:38,300
Oh forgot to refresh my mistake.

75
00:05:38,750 --> 00:05:38,970
OK.

76
00:05:38,990 --> 00:05:39,770
There we go.

77
00:05:40,130 --> 00:05:44,790
So now it's song slash one and I see song detail appear on the screen.

78
00:05:45,040 --> 00:05:46,440
So this is a pretty good start.

79
00:05:46,550 --> 00:05:51,050
Let's take a break and then come back in the next section and figure out how we're going to fetch the

80
00:05:51,050 --> 00:05:52,020
relevant song.

81
00:05:52,040 --> 00:05:57,230
And we'll also start thinking about putting together the lyric create component as well.

82
00:05:57,230 --> 00:05:59,910
So let's take a break and I'll catch you in just a second.

