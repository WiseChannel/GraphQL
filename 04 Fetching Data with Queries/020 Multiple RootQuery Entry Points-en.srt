1
00:00:00,760 --> 00:00:06,240
We've now got our users hooked up to our list of companies and we can ask for details about each company

2
00:00:06,290 --> 00:00:08,370
that a user is associated with.

3
00:00:08,620 --> 00:00:14,800
So if we look at our equerry over here yup we can access a user we can ask for their company and we

4
00:00:14,800 --> 00:00:18,010
can get the name of that company like so.

5
00:00:18,030 --> 00:00:23,110
But we do not yet have the ability to ask for just a company by itself.

6
00:00:23,170 --> 00:00:28,120
So I can't do something like Hey you want to give me the company with an idea of one and tell me the

7
00:00:28,120 --> 00:00:29,410
name.

8
00:00:29,410 --> 00:00:34,110
We don't have a field on the query type that allows us to do this yet.

9
00:00:34,300 --> 00:00:37,580
So if we think back to the diagram that were just looking at this one right here.

10
00:00:37,750 --> 00:00:41,390
Remember our Roop queery only allows us to go to a user.

11
00:00:41,410 --> 00:00:45,370
We dont have the ability to go directly to a company just yet.

12
00:00:45,490 --> 00:00:48,730
We can only access the company by first going to the user.

13
00:00:48,880 --> 00:00:50,870
And then over to the company.

14
00:00:50,980 --> 00:00:57,730
So in this section I want to work on adding the ability to go from a root query over to our company

15
00:00:57,760 --> 00:01:02,120
directly without having to worry about any users in between.

16
00:01:02,440 --> 00:01:07,120
After we do that we'll be able to make a query that looks just like this where we can say hey go find

17
00:01:07,120 --> 00:01:12,790
a company and tell me a little bit about that company you know go find the one with ID one tell me their

18
00:01:12,790 --> 00:01:15,830
name tell me their description and so on.

19
00:01:15,850 --> 00:01:17,650
So let's open up our schema file.

20
00:01:17,650 --> 00:01:20,760
We're going to find our root query type inside of there.

21
00:01:20,990 --> 00:01:22,240
Here's my scheme of file.

22
00:01:22,240 --> 00:01:24,280
I've got my root query type right here.

23
00:01:24,490 --> 00:01:29,860
And we're going to add on another field to our query type that we're going to call a company and it's

24
00:01:29,860 --> 00:01:33,640
going to allow us to query directly for a company.

25
00:01:34,060 --> 00:01:38,590
So let's get to it in the fields object as a sibling to user.

26
00:01:38,610 --> 00:01:48,790
So this is a sibling to user will say company the type will be a company type because that's what this

27
00:01:49,390 --> 00:01:55,240
field is going to return it's going to return a instance of a company and then the other arguments that

28
00:01:55,240 --> 00:01:59,330
we're going to place on here are the other properties are going to look nearly identical to the user.

29
00:01:59,380 --> 00:02:04,780
So we're also going to add on the args object because we want to ask for a company via a very particular

30
00:02:04,780 --> 00:02:10,600
ID and it will also define the resolve function that will actually go out find a particular company

31
00:02:10,630 --> 00:02:12,080
and return it.

32
00:02:12,910 --> 00:02:17,670
So we could place our Ark's with an ID and type of graph.

33
00:02:17,680 --> 00:02:20,430
Q L string like so.

34
00:02:20,620 --> 00:02:22,900
Remember this args object right here.

35
00:02:23,020 --> 00:02:28,900
Define tells our schema that whenever someone tries to access this field we expect them to be providing

36
00:02:28,900 --> 00:02:33,430
this ID argument and the ideas should be provided as a string.

37
00:02:33,820 --> 00:02:38,640
Then we can do the result function.

38
00:02:38,740 --> 00:02:43,060
And again it's going to look awfully similar to the requests that we just made to get a particular user

39
00:02:43,580 --> 00:02:56,680
will make a network request over to age TTP local host 3000 slash companies come Bennie's slash and

40
00:02:56,720 --> 00:03:04,090
we'll use string interpolation or template strings and say our DOT Id like so because I use a template

41
00:03:04,090 --> 00:03:05,670
string in here little bit of a 6.

42
00:03:05,680 --> 00:03:09,070
Do make sure that you're using batiks instead of single quotes here.

43
00:03:09,070 --> 00:03:11,150
Very important.

44
00:03:11,260 --> 00:03:15,070
And then again we'll do that little bit of compatibility between Axel's and graphics.

45
00:03:15,070 --> 00:03:20,830
Well just to make sure that we only return the data that comes back from the request and not the entire

46
00:03:20,830 --> 00:03:23,310
response object.

47
00:03:23,620 --> 00:03:25,120
All right let's give us a shot.

48
00:03:25,120 --> 00:03:28,670
I'm going to change back over to my graphical.

49
00:03:28,690 --> 00:03:31,420
You'll notice that I still have an error here.

50
00:03:31,420 --> 00:03:36,190
Remember graphic graphical does not automatically refresh our schema we have to actually refresh it

51
00:03:36,670 --> 00:03:37,990
manually.

52
00:03:38,470 --> 00:03:42,630
And now it should be a lot more obvious graphical gets the new schema it says.

53
00:03:42,640 --> 00:03:45,250
OK I understand that I can fetch a company.

54
00:03:45,340 --> 00:03:47,380
It looks like you gave the correct arguments.

55
00:03:47,380 --> 00:03:48,220
Ok I'm happy.

56
00:03:48,220 --> 00:03:52,840
Let's run this query again if you get this unknown operation nil.

57
00:03:52,870 --> 00:03:55,320
You can just delete and read type name.

58
00:03:55,360 --> 00:03:58,310
Just a little bug around graphical.

59
00:03:58,450 --> 00:04:01,870
And when I put the name in and run the query now returning Apple.

60
00:04:01,870 --> 00:04:04,480
Fantastic we can also look for the description.

61
00:04:05,110 --> 00:04:09,530
And of course if we want to get the ID and the response as well there we go.

62
00:04:09,910 --> 00:04:10,440
Perfect.

63
00:04:10,480 --> 00:04:15,740
So this has added the idea of a company to our schema.

64
00:04:16,570 --> 00:04:21,190
If you had any issue with getting this thing to show up always remember you should check your terminal

65
00:04:21,190 --> 00:04:25,060
out and make sure that you don't have any errors over here or any typos.

66
00:04:25,060 --> 00:04:31,630
If you have any typos they'll always show up in here and let us know hey you got a typo on x y z line.

67
00:04:32,290 --> 00:04:33,210
OK this is great.

68
00:04:33,310 --> 00:04:35,800
Let's go back and get to the next section.

69
00:04:35,800 --> 00:04:41,350
And we're going to work on linking together companies and users in one more fashion.

