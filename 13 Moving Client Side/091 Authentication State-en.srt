1
00:00:01,320 --> 00:00:06,450
Now that we have a better idea about some of the properties sitting on destock Propst data including

2
00:00:06,450 --> 00:00:11,520
both the user flag and the user property we can edit the header just a little bit to make sure that

3
00:00:11,520 --> 00:00:16,860
we are always showing the correct content on the right hand side or right hand corner of the header

4
00:00:17,100 --> 00:00:20,580
depending on whether or not the user is currently signed in or not.

5
00:00:20,580 --> 00:00:23,300
So here's the strategy we're going to take here.

6
00:00:23,400 --> 00:00:27,660
First we're going to update the GSX that is returned by this thing.

7
00:00:27,750 --> 00:00:30,590
Just to make the header look a little bit more like a header.

8
00:00:30,630 --> 00:00:34,620
So we're going to add on a couple of class names that are going to give it a little bit of coloring

9
00:00:34,860 --> 00:00:39,960
and some in the correct position and then we'll add any helper method that will determine what set of

10
00:00:39,960 --> 00:00:42,310
buttons we should be showing on the screen.

11
00:00:42,310 --> 00:00:43,870
So let's get to it.

12
00:00:43,920 --> 00:00:48,240
I'm going to start off by removing the console log statement because we don't really need to the log

13
00:00:48,270 --> 00:00:56,010
anymore and I'm going to replace all the jacks GSX that I have inside of here with a couple of tags

14
00:00:56,460 --> 00:01:00,590
that are going to make use of them materialize CSSA library.

15
00:01:00,600 --> 00:01:05,610
So again materialized VSS is already wired up to our starter project so I'm going to use a couple of

16
00:01:05,610 --> 00:01:12,380
class names that pull directly from that CSX framework just to make our project look a little bit nicer.

17
00:01:12,390 --> 00:01:21,240
First I'm going to place a nav tag and then inside of it all place a div with a class name of NAV wrapper

18
00:01:21,390 --> 00:01:26,080
like so then inside of your.

19
00:01:26,510 --> 00:01:30,810
This is where I'm going to want to figure out what set of buttons I should be showing on the screen.

20
00:01:31,070 --> 00:01:34,710
I'm not going to place the logic for that directly into that render method.

21
00:01:34,850 --> 00:01:42,070
Instead I'm going to make a helper method called this dot render buttons and we'll call that instead.

22
00:01:42,140 --> 00:01:46,210
And Rentner buttons can figure out exactly what we're attempting to show on the screen.

23
00:01:47,850 --> 00:01:53,950
So inside of rendered buttons we're going to have to do a couple different things in here.

24
00:01:54,060 --> 00:01:58,640
First if the user irks me if the query is not yet complete.

25
00:01:58,680 --> 00:02:04,550
So if we've not yet finished running this query I probably don't want to show anything just yet.

26
00:02:04,560 --> 00:02:10,020
I probably don't want to show any buttons whatsoever because I do not yet know whether or not I should

27
00:02:10,020 --> 00:02:14,220
be showing the set of buttons for a user to log in or log out.

28
00:02:14,490 --> 00:02:17,580
So the first thing that will do is look at the query.

29
00:02:17,580 --> 00:02:25,410
So this doc prod start data loading and if the query is still in progress I'm just going to return an

30
00:02:25,410 --> 00:02:30,510
empty div So I definitely could return a div that says loading right here.

31
00:02:30,510 --> 00:02:33,380
We did that in a previous section as we saw.

32
00:02:33,370 --> 00:02:39,420
However the query is usually resolved very quickly and so having that big flash of light loading on

33
00:02:39,420 --> 00:02:42,240
the screen especially for such a small element.

34
00:02:42,240 --> 00:02:45,060
I think it's probably not the most useful thing in the world.

35
00:02:45,150 --> 00:02:51,840
So I feel OK not showing anything on the top right hand side of the nav bar until we have decided whether

36
00:02:51,840 --> 00:02:53,870
or not the user is currently authenticated.

37
00:02:57,010 --> 00:03:03,880
Next we'll decide whether or not we need to show the set of buttons for allowing the user to log in

38
00:03:04,150 --> 00:03:05,610
or to log out.

39
00:03:05,650 --> 00:03:11,290
So if we get past this check right here it means that the query has been completed and we now need to

40
00:03:11,290 --> 00:03:16,960
look at the user property on the data object to decide what set of buttons we need.

41
00:03:16,960 --> 00:03:22,470
Now I'm thinking that since we're going to be accessing the data property here a couple of times maybe

42
00:03:22,470 --> 00:03:27,310
you would be it would pay off to do a little bit of destructuring ahead of time so will do a little

43
00:03:27,310 --> 00:03:32,320
bit of destructuring up here to pull off some of the different properties we need rather than referring

44
00:03:32,320 --> 00:03:38,830
to this stuff Propst our data several times inside this function so I'm going to pull off both the loading

45
00:03:38,920 --> 00:03:41,670
and user property from this stuff.

46
00:03:41,770 --> 00:03:43,450
Stock data.

47
00:03:43,490 --> 00:03:49,300
So now inside of the first statement we can just say if reloading return empty div.

48
00:03:49,300 --> 00:03:57,320
Don't try to do anything else next we can handle the case in which a user does exist.

49
00:03:57,400 --> 00:04:00,210
So this is the case in which a user does exist.

50
00:04:00,220 --> 00:04:06,100
So there is a currently authenticated user and so we will want to show a button on the screen that allows

51
00:04:06,100 --> 00:04:10,470
the user to log out of our application first.

52
00:04:10,480 --> 00:04:16,210
Now I don't really have any preferences or I don't really want to think too much about exactly what

53
00:04:16,210 --> 00:04:19,120
we're going to do when we want the user to log out.

54
00:04:19,120 --> 00:04:25,900
So for right now I'm just going to return a div that says log out.

55
00:04:26,170 --> 00:04:30,250
So we'll come back in add in a little bit more functionality to this thing.

56
00:04:30,310 --> 00:04:33,040
But for right now I just want a little bit of a placeholder.

57
00:04:35,520 --> 00:04:37,680
Now if a user does not exist.

58
00:04:37,690 --> 00:04:42,130
So if the user is not currently authenticate with their application then we're definitely going to need

59
00:04:42,130 --> 00:04:47,410
to show a set of buttons that allow the user to navigate to a location where they can sign into our

60
00:04:47,410 --> 00:04:49,000
application.

61
00:04:49,000 --> 00:04:51,810
So I think from here I will return

62
00:04:54,490 --> 00:05:00,800
in return a UL that is going to contain two separate links or seamlessness return a div right now.

63
00:05:00,920 --> 00:05:04,070
Let's keep it simple let's do the bare minimum.

64
00:05:04,070 --> 00:05:08,990
We're going to of course add in a lot more functionality here for showing the actual navigation links

65
00:05:08,990 --> 00:05:11,720
to go sign up or log into our application.

66
00:05:11,720 --> 00:05:16,550
But for right now we'll say you're not signed in.

67
00:05:16,610 --> 00:05:17,830
Keep it nice and simple.

68
00:05:19,380 --> 00:05:19,910
OK.

69
00:05:20,220 --> 00:05:21,610
So that's looking pretty good.

70
00:05:21,930 --> 00:05:24,940
I think we're just about ready to give this a test inside the browser.

71
00:05:25,080 --> 00:05:33,030
And so we'll be able to hopefully correctly see whether or not we are logged in or not to our application.

72
00:05:33,750 --> 00:05:35,960
So I need to flip back over to the browser.

73
00:05:36,390 --> 00:05:42,080
I will refresh the page and I see log out appear on the screen.

74
00:05:42,110 --> 00:05:44,040
Now that's definitely what I would expect to see.

75
00:05:44,060 --> 00:05:49,370
Because again I am currently signed into my application if I want to test what this looks like when

76
00:05:49,370 --> 00:05:55,860
I'm signed out then I can flip over to graphical and I can run my mutation to sign out of my application.

77
00:05:56,120 --> 00:06:00,640
So do that now just to make sure that that Hetter component is working the way I expect.

78
00:06:00,640 --> 00:06:09,470
So I run my mutation called log out and allows for the ID of the user who has just logged out.

79
00:06:09,470 --> 00:06:10,500
So we'll run this.

80
00:06:10,610 --> 00:06:16,130
I should now be logged out of my application so I'm no longer logged in and if I go back over to my

81
00:06:16,190 --> 00:06:22,670
application refresh the page I'll now see the text you're not signed in as I would expect.

82
00:06:22,670 --> 00:06:23,190
OK.

83
00:06:23,360 --> 00:06:24,410
So this looks good.

84
00:06:24,400 --> 00:06:25,990
We've definitely made some progress.

85
00:06:26,000 --> 00:06:31,360
The header definitely has some logic for figuring out whether or not I'm signed into the application.

86
00:06:31,610 --> 00:06:37,760
So the next thing that we need to do is make sure that once we are here now that we've figured out whether

87
00:06:37,760 --> 00:06:42,770
or not we're signed in or not we need to make sure the user has the ability to actually log out or to

88
00:06:42,770 --> 00:06:47,100
actually go to a form to sign in or sign up to our application.

89
00:06:47,540 --> 00:06:53,600
Ideally we would also probably want to show a little bit of text inside of here or something off to

90
00:06:53,600 --> 00:06:59,000
the right hand side of the header that allows the user to like click and go back to the home page of

91
00:06:59,000 --> 00:07:00,090
our application as well.

92
00:07:00,110 --> 00:07:04,120
So a little bit of a new branding information on the top left hand side.

93
00:07:04,410 --> 00:07:07,200
So let's take care of all that work inside the next section.

