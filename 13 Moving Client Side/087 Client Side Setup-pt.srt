1
00:00:00,680 --> 00:00:05,340
Ns fizemos um grande progresso no lado do servidor do nosso aplicativo, pois agora temos a capacidade

2
00:00:05,340 --> 00:00:08,080
de assinar um usurio que os registrou e assin-los novamente.

3
00:00:08,220 --> 00:00:13,140
E tambm a capacidade de determinar se um usurio est autenticado ou no, o que significa

4
00:00:13,140 --> 00:00:18,660
que agora podemos comear a pensar sobre o lado do cliente da nossa aplicao, o lado do cliente

5
00:00:18,660 --> 00:00:24,270
do nosso aplicativo ser um aplicativo de reao que  apoiado pelo re-ato roteador para manipulao de navegao para

6
00:00:24,270 --> 00:00:25,310
algumas das diferentes pginas.

7
00:00:25,620 --> 00:00:29,310
Vamos dar uma olhada em nossa maquete novamente e comear a

8
00:00:29,310 --> 00:00:32,880
planejar alguns dos diferentes componentes da necessidade provavelmente dentro desta aplicao.

9
00:00:32,880 --> 00:00:37,680
Ento, eu vou sugerir que provavelmente temos uma cabea ou um componente de tipo

10
00:00:37,680 --> 00:00:43,870
que exista no topo da nossa aplicao, a cabea ou componente mostrar dois botes que se inscrevero e

11
00:00:43,870 --> 00:00:44,510
entraro.

12
00:00:44,880 --> 00:00:51,090
Se o usurio no estiver conectado no momento e, uma vez que o usurio for

13
00:00:51,090 --> 00:00:55,260
autenticado, alternaremos para ter um nico boto de excluso aqui.

14
00:00:55,260 --> 00:01:01,740
Portanto, o estado ou a varivel de exibio ou a propriedade de exibio de Hetter vai mudar

15
00:01:01,740 --> 00:01:09,480
com base no estado de autenticao do usurio para a pgina de destino externa que um usurio ver se eles no

16
00:01:09,480 --> 00:01:10,570
estiverem autenticados atualmente.

17
00:01:10,620 --> 00:01:16,290
Ns provavelmente poderamos chamar esse desembarque ou principal ou algo parecido com isso, apenas para indicar

18
00:01:16,290 --> 00:01:21,520
que este  o componente que o usurio ir ver sempre que aterrissem na pgina

19
00:01:21,540 --> 00:01:29,460
de boas-vindas ou na rota de rota quando eles no esto atualmente autenticados e ento inscrever um usurio e assine uma dessas

20
00:01:29,520 --> 00:01:31,600
duas formas, parece exatamente idntico.

21
00:01:31,770 --> 00:01:34,200
Um  colecionar e-mail e senha.

22
00:01:34,200 --> 00:01:38,380
E o outro  lo e behold tambm coletando o email e a senha.

23
00:01:38,670 --> 00:01:43,680
sejam formas separadas, mas talvez possamos pensar de alguma maneira combin-las em

24
00:01:43,680 --> 00:01:49,980
uma nica forma, uma vez que ambas utilizam os mesmos campos diferentes aqui dentro. .

25
00:01:49,980 --> 00:01:52,030
No momento, penso agora, talvez

26
00:01:52,230 --> 00:01:57,870
A nica grande diferena entre os dois  a mutao que cada um chama de formulrio de inscrio

27
00:01:57,950 --> 00:02:03,060
chamar a mutao de inscrio e o formulrio de registro precisa chamar a mutao de logs.

28
00:02:03,270 --> 00:02:08,370
Ento talvez possamos pensar em alguma maneira de fazer um pouco de reutilizao de cdigo l sem ter que

29
00:02:08,370 --> 00:02:10,100
reescrever o formulrio inteiro duas vezes.

30
00:02:11,630 --> 00:02:17,420
Finalmente, quando um usurio est logado com sucesso e queremos mostrar-lhes alguma pgina que diz que

31
00:02:17,420 --> 00:02:23,030
voc agora est atualmente conectado ao nosso aplicativo, provavelmente podemos chamar isso como painel ou

32
00:02:23,030 --> 00:02:25,760
pgina de boas-vindas ou pgina de logado.

33
00:02:25,760 --> 00:02:29,630
Apenas algo para indicar ao usurio. Ei, voc j iniciou sesso no nosso aplicativo.

34
00:02:29,630 --> 00:02:31,320
Parabns.

35
00:02:31,820 --> 00:02:34,310
Ento esse  o nosso plano para todos os diferentes componentes.

36
00:02:34,340 --> 00:02:39,710
Eu acho que provavelmente podemos ir adiante e comear dentro de nossa aplicao do

37
00:02:39,710 --> 00:02:47,060
lado do cliente conectando alguns dos Apollo boilerplate para que eu possa abrir meu editor de cdigo e abriremos nosso

38
00:02:47,210 --> 00:02:50,930
diretrio de cliente e depois encontremos o arquivo de ndice.

39
00:02:50,960 --> 00:02:54,950
Ento,  aqui que vamos fazer uma grande parte da configurao inicial do nosso

40
00:02:54,950 --> 00:02:56,700
aplicativo e j passamos por isso.

41
00:02:56,750 --> 00:02:59,830
Lembre-se que dentro deste ndice G-S File.

42
00:02:59,840 --> 00:03:04,610
Nossa inteno  iniciar o roteador re-agir e definir todas as rotas diferentes

43
00:03:04,610 --> 00:03:11,330
que vamos ter disponvel e tambm iniciaremos o nosso cliente Appollo e conectados ao nosso aplicativo re-actriz atravs

44
00:03:11,330 --> 00:03:13,770
do uso do Apollo provedor tambm.

45
00:03:14,760 --> 00:03:19,110
Ento eu acho que faz sentido primeiro comear com o lado Apollo da nossa aplicao.

46
00:03:19,260 --> 00:03:25,560
Ento, vamos exigir ou vamos importar alguns dos ajudantes do Apollo e depois adicion-los ao nosso

47
00:03:25,560 --> 00:03:26,550
componente aqui.

48
00:03:27,270 --> 00:03:36,660
curly aqui o especialista da biblioteca cliente Apollo exporta o Cliente Apollo como o ex-porn padro.

49
00:03:39,380 --> 00:03:49,680
Ento, comearemos a importar os clientes Apollo da biblioteca do cliente Apollo e tambm importaremos o provedor

50
00:03:49,680 --> 00:03:57,120
Apollo de reagir ao Apollo, bem como tome nota especial da presena dos

51
00:03:57,180 --> 00:03:57,990
aparelhos

52
00:03:58,260 --> 00:04:04,110
Enquanto o Re-Act, o Apollo exporta vrias propriedades diferentes, uma das quais  o provedor da Apollo, e 

53
00:04:04,110 --> 00:04:08,900
por isso que estamos usando as chaves curvas aqui, mas no no cliente Apollo acima.

54
00:04:11,210 --> 00:04:18,620
Agora, podemos fazer uso da biblioteca do cliente Apollo para fazer nosso cliente local da Apollo para que possamos

55
00:04:18,860 --> 00:04:26,990
dizer que o cliente conc  um novo cliente Apollo e eu vou passar esse objeto de opes porque espero que

56
00:04:27,000 --> 00:04:30,570
possamos adicionar naquele ID de dados do objeto helper.

57
00:04:30,900 --> 00:04:35,430
Lembre-se de que falamos sobre essa idia de dados da funo de objeto que  colocada dentro daqui.

58
00:04:35,460 --> 00:04:41,970
Seu objetivo  identificar todos os registros que retornam do servidor para que Appollo possa dizer que eu

59
00:04:42,190 --> 00:04:43,370
acabei de voltar.

60
00:04:43,380 --> 00:04:44,750
Record ABC.

61
00:04:44,850 --> 00:04:47,250
Acabei de voltar ao recorde 1 2 3.

62
00:04:47,310 --> 00:04:52,440
Ento, em vez de restaurar nossos dados para cada consulta que seja emitida, a Apollo

63
00:04:52,440 --> 00:04:57,360
ter a capacidade de identificar a informao que j foi retirada do servidor e

64
00:04:57,360 --> 00:04:59,570
armazen-la dentro de algum cache local.

65
00:04:59,670 --> 00:05:00,200
Ento eu vou.

66
00:05:00,330 --> 00:05:05,150
Definiremos a identificao de dados da funo de objeto.

67
00:05:05,580 --> 00:05:11,710
Ento, todos os registros que buscamos no nosso back-end sero executados por esta funo aqui

68
00:05:11,710 --> 00:05:15,630
e ns a identificamos retornando o ID dos registros.

69
00:05:15,630 --> 00:05:20,160
Agora, uma coisa que eu gostaria de salientar  que o nico tipo que estava

70
00:05:20,160 --> 00:05:26,790
virando de nossas costas e agora  o tipo de usurio e atualmente ainda no definimos a ID nesse tipo ainda, ainda

71
00:05:26,790 --> 00:05:28,470
no definimos o campo ID.

72
00:05:28,680 --> 00:05:31,160
Ento, temos que nos certificar de que ns tambm nos ocupemos.

73
00:05:32,230 --> 00:05:38,200
Ento, se abrirmos nosso diretrio do servidor, encontre nosso arquivo de esquema me veja na pasta de esquema e encontre

74
00:05:38,200 --> 00:05:39,490
a pasta de tipos.

75
00:05:39,500 --> 00:05:46,990
Encontre meu arquivo digitado pelo usurio e depois dentro de aqui novamente, ainda no definimos o campo ID no tipo

76
00:05:46,990 --> 00:05:47,840
de usurio.

77
00:05:48,130 --> 00:05:50,780
Ento, eu tambm defini o campo ID.

78
00:05:50,920 --> 00:05:57,360
Digite, ento, o grfico Cuil id para garantir que eu consiga o meu Khama l.

79
00:05:57,490 --> 00:06:01,890
Eu no vou triplicar minha capitalizao aqui tambm e certifique-se de que eu

80
00:06:01,900 --> 00:06:08,450
tenha capitalizado a capital D e tambm me certificarei de reestruturar isso do nosso objeto de ferramenta de grfico tambm.

81
00:06:08,610 --> 00:06:10,960
 uma ferramenta grfica Id like.

82
00:06:11,800 --> 00:06:12,310
EST BEM.

83
00:06:12,640 --> 00:06:15,570
Ento lembre-se da identificao de dados do objeto.

84
00:06:15,580 --> 00:06:22,090
O pressuposto aqui  que cada registro nico que retorna do nosso back-end ter uma propriedade de

85
00:06:22,090 --> 00:06:23,390
identificao definida nela.

86
00:06:23,410 --> 00:06:26,190
Ento  por isso que acabamos de adicionar esse campo de identificao ao tipo de usurio.

87
00:06:26,230 --> 00:06:32,050
Ns precisamos ter certeza de que, sempre que pedimos usurio da parte de trs, precisamos especificar que

88
00:06:32,050 --> 00:06:33,550
queremos o campo ID tambm.

89
00:06:33,640 --> 00:06:39,010
E isso  exatamente o que permite que o cliente Apollo identifique de forma nica todos os registros que buscamos.

90
00:06:41,190 --> 00:06:46,950
Ok, a ltima coisa que eu quero fazer dentro de voc  muito rpida,  configurar ou o provedor Appollo.

91
00:06:47,020 --> 00:06:51,900
Ento lembre-se de que o cliente Apollo  apenas a tecnologia que interage com nosso back-end.

92
00:06:52,110 --> 00:06:55,820
No faz ideia de como trabalhar com a biblioteca de reagem.

93
00:06:55,860 --> 00:07:01,680
Cabe ao provedor Apollo fornecer essa camada de cola entre o cliente Apollo que obtm todos

94
00:07:01,680 --> 00:07:06,250
os dados e nosso aplicativo de reao que exibe todos os dados.

95
00:07:06,860 --> 00:07:16,680
provedor Apollo, ns o passaremos para o cliente que acabamos de criar e ento nos certificaremos de que vamos envolver todo o provedor

96
00:07:16,680 --> 00:07:23,190
do Appollo com ele, desculpe-me toda a div com o provedor Apollo como est bem.

97
00:07:23,700 --> 00:07:29,710
Ento, ao invs de mostrar uma div aqui por si s, vamos adicionar no

98
00:07:29,750 --> 00:07:31,510
Isso parece muito bom aqui.

99
00:07:31,550 --> 00:07:35,570
Eu acho que provavelmente podemos nos dar um teste dentro do nosso navegador e apenas certifique-se

100
00:07:35,570 --> 00:07:38,800
de que ainda vejamos o texto Auth. inicial na tela.

101
00:07:39,170 --> 00:07:42,840
Primeiro, certifique-se de que meu servidor ainda esteja funcionando sem erros.

102
00:07:42,890 --> 00:07:45,110
Ento, parece que no tenho erros aqui.

103
00:07:45,110 --> 00:07:51,470
Parece que o projeto ainda est sendo construdo com sucesso mudou de volta para o meu navegador e,

104
00:07:51,470 --> 00:07:55,700
em seguida, navegue at o host local 4000 e parece ser bom.

105
00:07:55,700 --> 00:08:00,600
Ainda temos todos os iniciantes aparecendo na tela e parece no ter nenhum erro.

106
00:08:00,860 --> 00:08:05,280
Ento, parece que temos o incio precoce de nossa aplicao juntos.

107
00:08:05,300 --> 00:08:10,880
Vamos continuar com a prxima seo e comear a trabalhar na configurao inicial do roteador re-agir tambm.

