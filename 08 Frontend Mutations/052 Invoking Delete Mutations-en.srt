1
00:00:00,910 --> 00:00:05,530
We have successfully associated our mutation with the song list component.

2
00:00:05,620 --> 00:00:10,930
So all we have to do now is make sure that we call the mutation at a certain point in time from within

3
00:00:10,930 --> 00:00:13,640
the song list to delete a particular song.

4
00:00:14,080 --> 00:00:15,310
So let's get to it.

5
00:00:15,310 --> 00:00:21,000
I think that probably a good plan is going to be to find the render songs method right here.

6
00:00:21,040 --> 00:00:26,060
So here's render songs for every song we render on the screen as an ally.

7
00:00:26,080 --> 00:00:31,540
I think a good approach would be to show a delete icon or something like that that a user can click

8
00:00:31,540 --> 00:00:36,520
to delete a particular song will place the icon in here.

9
00:00:36,550 --> 00:00:41,710
And then once the user clicks on it we'll make sure that we have a callback function to invoke the mutation

10
00:00:41,710 --> 00:00:44,710
that we just attach to the song list component.

11
00:00:44,710 --> 00:00:46,060
So that's going to be our plan.

12
00:00:46,090 --> 00:00:47,470
We're going to add the icon.

13
00:00:47,470 --> 00:00:51,760
We're going to set up a click event handler and then we're going to call the mutation to delete that

14
00:00:51,760 --> 00:00:52,880
particular song.

15
00:00:53,080 --> 00:00:53,840
Let's get to it.

16
00:00:55,000 --> 00:01:01,240
All first start off by adding the icon inside of the light that represents each individual song.

17
00:01:01,540 --> 00:01:05,780
So inside of here I can add an icon with an ID tag.

18
00:01:06,400 --> 00:01:10,010
I wanted to be something that looks like a trash can or something like that.

19
00:01:10,060 --> 00:01:12,650
So I'm going to use the delete icon.

20
00:01:12,910 --> 00:01:19,390
Remember that this is a little bit of magic with the materialized icon set it looks at the interior

21
00:01:19,390 --> 00:01:24,670
of the eye tag it looks at the very particular word that I put in there and replaces it with the appropriate

22
00:01:24,670 --> 00:01:25,350
icon.

23
00:01:25,540 --> 00:01:27,920
So this is not an arbitrary word that I added here.

24
00:01:28,000 --> 00:01:31,690
It is a named icon from the material icon set.

25
00:01:32,930 --> 00:01:34,910
Now I want to pass this thing a couple of props.

26
00:01:34,950 --> 00:01:43,440
So I'm going to do a little bit of indentation like so I'm going to pass it a class name of material

27
00:01:43,950 --> 00:01:49,110
icons like so and then I'm also going to assign it an on click function.

28
00:01:49,110 --> 00:01:55,350
So whenever someone clicks on this icon right here we all are running a click handler or a click event

29
00:01:55,350 --> 00:02:00,960
handler which will be responsible for calling the mutation that was passed to this component.

30
00:02:00,960 --> 00:02:08,250
So say whenever someone clicks this thing I want to run this arrow function that we'll call this dot

31
00:02:08,340 --> 00:02:10,740
on song delete.

32
00:02:10,770 --> 00:02:12,690
Now we have not yet to find this function.

33
00:02:12,720 --> 00:02:14,790
So we're going to do so right now.

34
00:02:15,150 --> 00:02:21,360
Right above the render songs method will define on song delete like so.

35
00:02:21,750 --> 00:02:27,870
So the intent is that this function right here will be responsible for calling the actual mutation to

36
00:02:27,870 --> 00:02:33,990
delete the song from our back end server as we've seen however one thing I just want to review with

37
00:02:33,990 --> 00:02:35,370
you really quickly.

38
00:02:35,370 --> 00:02:40,550
The delete song mutation expects to receive an ID as an argument.

39
00:02:40,890 --> 00:02:44,360
So de-list song is written in a very arbitrary fashion.

40
00:02:44,400 --> 00:02:50,730
It's saying I can delete a song that's fine but you gotta tell me the ID of the song that you want to

41
00:02:50,730 --> 00:02:51,440
delete.

42
00:02:51,600 --> 00:02:57,690
So we need to make sure that when we call that delete song mutation we pass in the ID of the song that

43
00:02:57,690 --> 00:03:00,580
we want to get rid of to do so.

44
00:03:00,600 --> 00:03:06,510
We're going to modify the click event handler just a little bit and make sure that we pass in the ID

45
00:03:06,570 --> 00:03:08,430
of the song that we want to delete.

46
00:03:08,460 --> 00:03:11,540
It's going to make sure that I receive that as an argument up here.

47
00:03:13,150 --> 00:03:18,570
Since I'm expecting it as an argument I'm going to have to make sure that inside of the On Click handler

48
00:03:18,760 --> 00:03:23,750
when I call on the on song delete I-PASS in the song Id as well.

49
00:03:23,980 --> 00:03:27,000
So I can say song dot ID.

50
00:03:27,040 --> 00:03:33,960
You will notice that I'm now making use of song Id twice in here and I'm also making use of song title.

51
00:03:34,090 --> 00:03:39,340
I think that we can do a little bit of refactoring here a little bit of clean up to do some destructuring

52
00:03:39,360 --> 00:03:41,040
off of the song argument.

53
00:03:41,050 --> 00:03:43,610
I think that will clean up this function just a little bit.

54
00:03:43,840 --> 00:03:45,680
So I'm going to delete song.

55
00:03:46,030 --> 00:03:48,820
I'm going to replace it with Perens.

56
00:03:49,090 --> 00:03:52,030
And then a set of curly braces to do the structure.

57
00:03:52,450 --> 00:03:59,950
I want to pull off the ID and the title properties then I can go through this function and replace every

58
00:03:59,950 --> 00:04:08,790
song dot blah blah blah with just ID title and Id like so.

59
00:04:09,210 --> 00:04:12,410
So definitely serves to clean up the code in here just a little bit.

60
00:04:12,420 --> 00:04:13,920
I think it looks pretty nice.

61
00:04:15,170 --> 00:04:17,620
I know the icon is a little bit nasty.

62
00:04:17,700 --> 00:04:20,230
We could probably get away with just one lighning it.

63
00:04:20,540 --> 00:04:25,160
Let's see and I think on my screen I want to zoom out any more for you.

64
00:04:25,160 --> 00:04:27,680
Definitely feel free to make this one line right here.

65
00:04:27,680 --> 00:04:33,680
I think that would go a long way to printing this little block of code up just a little bit.

66
00:04:33,690 --> 00:04:34,170
All right.

67
00:04:34,190 --> 00:04:39,740
Last thing we have to do inside of on Songdo late we're going to make sure that we call our mutation

68
00:04:39,980 --> 00:04:44,550
and we pass along the ID as a query variable to that mutation.

69
00:04:44,570 --> 00:04:48,280
So step number one is to call the mutation itself.

70
00:04:48,300 --> 00:04:54,860
Remember whenever we wire up a mutation to a component we can call it by referring to this duck props

71
00:04:55,030 --> 00:04:56,030
don't mutate.

72
00:04:56,030 --> 00:04:59,340
That's how we run a mutation inside of a component.

73
00:04:59,540 --> 00:05:06,980
Then to find the query variables that we want to pass along we define the variables objects and inside

74
00:05:06,980 --> 00:05:12,110
of an object inside that thing will pass along all the different variables that the mutation expects

75
00:05:12,110 --> 00:05:13,310
to have.

76
00:05:13,310 --> 00:05:20,600
Right now our mutation expects only to have the ID property and wants an ID variable provided to it.

77
00:05:20,750 --> 00:05:27,110
So I'll say OK here's your ID and then immediately I see that we can do a little bit of ESX refactoring

78
00:05:27,140 --> 00:05:30,380
here again the key and the value are identical.

79
00:05:30,410 --> 00:05:34,280
So it will condenses down to just v Id like so.

80
00:05:34,540 --> 00:05:35,020
OK.

81
00:05:35,150 --> 00:05:37,130
So I think that this is looking pretty good.

82
00:05:37,400 --> 00:05:44,420
We added in the icon whenever a user clicks on it we'll call on song delete and pass and the idea of

83
00:05:44,420 --> 00:05:48,640
the song we want deleted on song delete then takes that ID.

84
00:05:48,770 --> 00:05:54,230
It calls the nutation and it passes it along as a variable.

85
00:05:54,230 --> 00:06:01,220
Now one thing that we just ran into in our song create component when we were creating a new song we

86
00:06:01,220 --> 00:06:07,280
saw that there was some issue where after we ran a mutation the underlying query that is responsible

87
00:06:07,280 --> 00:06:14,420
for vetting the list of songs did not immediately rerun and get the updated list of songs from the server.

88
00:06:14,420 --> 00:06:20,190
That is to say that component did not reach render with the correct set of songs.

89
00:06:20,270 --> 00:06:26,990
After running the mutation when we did Songkhla create or this song created mutation previously.

90
00:06:26,990 --> 00:06:32,720
So I don't really have any expectation that this mutation is going to work any differently.

91
00:06:32,720 --> 00:06:38,000
So I kind of expect that when we run this mutation I think that it's going to delete the song from our

92
00:06:38,020 --> 00:06:44,030
backend but I don't really feel like it's going to automatically update the UI for us.

93
00:06:44,060 --> 00:06:50,900
That is something that for better for worse we kind of have to take care of manually by saying hey make

94
00:06:50,900 --> 00:06:53,740
sure you refreshed this query after you run.

95
00:06:53,750 --> 00:06:57,130
So I think that we might have to come back and do a little bit more work on that front.

96
00:06:57,290 --> 00:07:03,750
But first let's do a test inside the browser and make sure that this thing is working as we expect.

97
00:07:04,020 --> 00:07:12,580
So I'm going to open up the browser Here's my component or refresh the page as you can see the icons

98
00:07:12,580 --> 00:07:15,580
that are on here and kind of ugly.

99
00:07:15,820 --> 00:07:18,490
All I should say very ugly right now.

100
00:07:18,490 --> 00:07:22,000
I think that they would be much better off on the right hand side of the page.

101
00:07:22,000 --> 00:07:25,110
We can take care of that with a little bit of CSSA in just a moment.

102
00:07:25,120 --> 00:07:30,840
But for right now let's just focus on making sure that we can delete each individual song.

103
00:07:30,880 --> 00:07:36,370
You'll notice I have my chrome developer Consolo open and I've got my network tab selected so I can

104
00:07:36,370 --> 00:07:39,990
see all of the network requests that are being exchanged with my graft.

105
00:07:40,000 --> 00:07:44,890
Well back end I'm going to clear out the request log and then I'm going to delete it.

106
00:07:44,980 --> 00:07:50,460
One of the songs and when I do I expect to see a request to the graft to El Bacchante.

107
00:07:50,470 --> 00:07:55,810
That's definitely my hope as to whether or not the UI will automatically update to reflect that that

108
00:07:55,810 --> 00:07:56,950
song was deleted.

109
00:07:57,160 --> 00:07:59,930
Well that's something that we'll figure out in just a little bit.

110
00:08:00,770 --> 00:08:07,220
So I want to go to Spryte first Coke and I'm going to click on the icon to delete the song when I do

111
00:08:07,220 --> 00:08:10,800
so I immediately get a request popping up in the log here.

112
00:08:10,840 --> 00:08:15,330
I'm going to inspect it by clicking on it and then selecting the preview tab.

113
00:08:15,890 --> 00:08:22,100
If I expand this data property you'll see that yeah I'm definitely deleting or I'm definitely at least

114
00:08:22,100 --> 00:08:24,800
calling the delete song mutation right here.

115
00:08:24,830 --> 00:08:25,900
So this looks pretty good.

116
00:08:25,910 --> 00:08:28,060
I'm pretty happy about this right here.

117
00:08:28,190 --> 00:08:34,920
But you'll notice that it appears that the sprite verst Coke song is still present in the UI.

118
00:08:35,360 --> 00:08:41,280
Well let's make sure the thing actually got deleted by refreshing the page when I refresh the page.

119
00:08:41,300 --> 00:08:45,150
OK sprite verse Coke is definitely gone so the record is being deleted.

120
00:08:45,320 --> 00:08:50,760
But it absolutely appears that the record is not being automatically removed from the UI.

121
00:08:51,020 --> 00:08:55,640
So I think that there's still a little bit of work that we have to do and our mutation let's take care

122
00:08:55,640 --> 00:09:01,580
of that in the next section and also address these awfully ugly icons that we have at that point as

123
00:09:01,580 --> 00:09:02,130
well.

124
00:09:02,360 --> 00:09:06,510
So to take a quick break and we'll address those two items in the next section.

