1
00:00:00,820 --> 00:00:07,410
A menos que a seo, quando concluda as etapas 1 e 2 do nosso processo de quatro etapas para obter

2
00:00:07,710 --> 00:00:14,010
dados do nosso servidor para um componente individual, identificamos os dados que precisvamos dentro do componente e, em seguida,

3
00:00:14,010 --> 00:00:20,280
escrevemos uma consulta tanto no grfico quanto no interior do nosso arquivo de componente para buscar esses dados reais.

4
00:00:20,280 --> 00:00:24,930
Uma coisa que eu quero apontar sobre o queery que colocamos dentro do componente atual

5
00:00:24,930 --> 00:00:31,410
aqui  que a biblioteca do GQ Well aqui mesmo este GQ ir ajud-la junto com a consulta que estamos associada

6
00:00:31,410 --> 00:00:35,800
a ela de certa forma, aqui mesmo  na verdade, no est executando a consulta.

7
00:00:35,870 --> 00:00:38,870
S est definindo uma consulta para ns.

8
00:00:39,090 --> 00:00:42,850
Ento, apenas escreva a consulta e atribua-a a este objeto de consulta aqui.

9
00:00:42,990 --> 00:00:45,310
Nada est sendo executado contra o servidor.

10
00:00:45,330 --> 00:00:48,730
No h pedidos de rede que esto sendo executados agora.

11
00:00:48,810 --> 00:00:54,800
Est apenas formando a idia de uma consulta que pode ser executada em algum momento no futuro.

12
00:00:56,110 --> 00:01:01,110
Ento vamos continuar agora com os passos trs e quatro do nosso processo de quatro etapas.

13
00:01:01,270 --> 00:01:06,670
Em primeiro lugar, juntaremos o queery e o componente e, em seguida, teremos acesso

14
00:01:06,670 --> 00:01:09,170
a nossos dados dentro do componente atual.

15
00:01:09,580 --> 00:01:15,670
Ento, para o 3 de setembro, unir nosso equador em nosso componente juntos, iremos

16
00:01:15,670 --> 00:01:19,770
importar uma outra biblioteca auxiliar no topo do grfico.

17
00:01:19,780 --> 00:01:24,730
Q Bem, de re-agir, Apollo, assim.

18
00:01:25,290 --> 00:01:31,180
Ento, esta  a mesma biblioteca auxiliar que obtemos o grfico que todos vocs esto vendo no provedor Apollo dentro do

19
00:01:31,210 --> 00:01:33,770
nosso ndice J. S. Arquivo.

20
00:01:33,910 --> 00:01:39,610
Lembre-se de que o fornecedor da Apollo que estvamos investigando aqui dissera que o fornecedor da Apollo

21
00:01:39,790 --> 00:01:47,260
era o que ligava o nosso servidor de combustvel grfico com o lado do re-ato da nossa aplicao para que possamos realmente

22
00:01:47,260 --> 00:01:53,530
imaginar que a biblioteca do Apollo reativasse O uso de  a camada de cola entre reagir e a

23
00:01:53,530 --> 00:01:54,700
fonte de dados Apollo.

24
00:01:54,730 --> 00:01:58,310
Portanto, no  surpresa que venham a usar algo do grfico.

25
00:01:58,320 --> 00:02:04,690
P Bem, algo da reabilitao da biblioteca Apollo para nos ajudar a vincular um componente com uma consulta real

26
00:02:04,840 --> 00:02:07,000
para executar contra os dados do servidor.

27
00:02:08,180 --> 00:02:09,710
Ento agora temos esse ajudante aqui.

28
00:02:09,740 --> 00:02:16,160
Vamos us-lo para levar a consulta e assumir o componente e junt-los juntos de alguma forma.

29
00:02:16,160 --> 00:02:21,230
Eu vou para a indicao padro de exportao na parte inferior deste arquivo e vamos dizer

30
00:02:21,290 --> 00:02:26,050
com um pouco de estranha sintaxe que posso dizer que agora  um pouco estranho.

31
00:02:26,210 --> 00:02:26,940
Vamos dizer grfico.

32
00:02:27,020 --> 00:02:33,740
na consulta e depois vamos colocar a lista de msicas com um segundo conjunto de parnteses.

33
00:02:33,740 --> 00:02:38,080
Bem, eu vou definir um conjunto de parnteses e vamos passar

34
00:02:38,600 --> 00:02:43,640
Ento, certifique-se de ter um conjunto de parnteses em torno de Querrey e, em seguida, um segundo

35
00:02:44,660 --> 00:02:48,460
conjunto sem msicas, essa sintaxe que temos aqui pode parecer muito familiar.

36
00:02:48,470 --> 00:02:54,140
Se voc tiver alguma experincia anterior com redux se voc no tiver experincia com redox novamente, no 

37
00:02:54,140 --> 00:02:54,600
grande coisa.

38
00:02:54,620 --> 00:02:59,060
Eu s quero salientar que existe alguma semelhana entre as duas bibliotecas aqui.

39
00:02:59,150 --> 00:03:03,700
Este  um cdigo javascript vlido que estamos a olhar para o grfico chamada Cuil.

40
00:03:03,740 --> 00:03:05,910
Ento, h uma pequena declarao aqui.

41
00:03:06,020 --> 00:03:12,530
Ele retorna uma funo que  imediatamente indicada ou imediatamente chamada pelo segundo

42
00:03:12,530 --> 00:03:14,270
conjunto de parnteses aqui.

43
00:03:14,270 --> 00:03:19,190
Portanto, a primeira parte retorna uma funo e estamos imediatamente indicando essa funo

44
00:03:19,190 --> 00:03:21,310
com o segundo conjunto de parnteses.

45
00:03:21,920 --> 00:03:28,370
Este passo de ligao entre o grfico entre a consulta de grfico Kulick que definimos eo componente

46
00:03:28,370 --> 00:03:32,080
real que definimos  o que realmente executar a consulta.

47
00:03:32,150 --> 00:03:35,060
Quando nosso componente  renderizado para a tela.

48
00:03:35,060 --> 00:03:40,010
para ter uma melhor idia de quando nossos dados esto sendo obtidos do servidor.

49
00:03:40,010 --> 00:03:42,380
Ento, vamos expandir essa parte um pouco

50
00:03:42,380 --> 00:03:46,260
Ento eu tenho um pequeno diagrama aqui e isso vai nos ajudar um pouco.

51
00:03:46,310 --> 00:03:52,760
A idia por trs da ligao da consulta e do componente em conjunto funciona da mesma maneira que, quando a primeira

52
00:03:52,760 --> 00:03:59,080
vez que processamos o nosso componente na tela, a consulta que escrevemos ser enviada automaticamente para o nosso servidor back-end.

53
00:03:59,100 --> 00:04:04,580
E ento eu disse para a sua consulta emitida pelo Corey emitido. Eu realmente quis dizer que a

54
00:04:04,580 --> 00:04:12,140
consulta foi executada ou a consulta foi enviada para o servidor backend para buscar alguns dados para ns buscar alguns dados do servidor  um

55
00:04:12,140 --> 00:04:12,790
processo assncrono.

56
00:04:12,790 --> 00:04:15,440
 algo que leva algum tempo.

57
00:04:15,500 --> 00:04:23,250
Ento, quando o componente  processado, ele aparecer na tela temporariamente sem qualquer tipo de dados.

58
00:04:23,270 --> 00:04:28,190
Depois, aps algum perodo de tempo em que a consulta for concluda, o componente ser

59
00:04:28,280 --> 00:04:30,960
automaticamente processado com os dados obtidos da consulta.

60
00:04:31,310 --> 00:04:36,520
Ento, agora, a verdadeira questo que precisamos responder  onde esses dados aparecem.

61
00:04:36,560 --> 00:04:42,680
Dentro do componente como OK, a consulta foi executada e a consulta foi resolvida pelo servidor.

62
00:04:42,830 --> 00:04:45,000
Como fazemos uso dos dados.

63
00:04:45,010 --> 00:04:51,320
Ento, essa  a ltima grande coisa que precisamos descobrir os dados que ns retornamos do

64
00:04:51,320 --> 00:04:51,730
grfico.

65
00:04:51,740 --> 00:04:59,420
Sua consulta  retornada e colocada dentro do membro do objeto do suporte de nossos componentes. O objeto

66
00:04:59,420 --> 00:05:05,540
de adereos  usado dentro de reagem para comunicar alguns dados externos no prprio componente.

67
00:05:05,540 --> 00:05:12,110
Ento, podemos adicionar referncia a esses adereos dentro do nosso componente para tentar acessar os dados que

68
00:05:12,110 --> 00:05:14,010
foram recuperados pelo nosso equer.

69
00:05:14,150 --> 00:05:19,850
No momento, penso que provavelmente seja uma boa ideia colocar uma declarao de log do console e simplesmente cancelaremos

70
00:05:19,850 --> 00:05:20,410
o logout.

71
00:05:20,420 --> 00:05:25,670
Este suporte de doca e ns veremos como os dados esto aparecendo dentro do componente quando ele 

72
00:05:25,670 --> 00:05:26,720
retornado do servidor.

73
00:05:26,720 --> 00:05:31,950
E espero que nos d uma melhor idia de como trabalhar com esses dados dentro desse componente real.

74
00:05:32,480 --> 00:05:37,850
Agora, antes de execut-lo no navegador, eu s quero lembr-lo mais uma vez que, quando executamos

75
00:05:37,850 --> 00:05:42,370
a consulta, demora um pouco de tempo para que a consulta seja realmente concluda.

76
00:05:42,410 --> 00:05:47,790
Ento, nosso componente ser processado duas vezes uma vez sem dados.

77
00:05:48,110 --> 00:05:51,950
E ento, uma segunda vez aps o retorno dos dados do servidor.

78
00:05:52,360 --> 00:05:55,140
Ok, vamos ter certeza e certifique-se de que seu arquivo esteja salvo.

79
00:05:55,200 --> 00:06:01,880
Sim, vai virar para o navegador e vamos atualizar a pgina e ver o que isso parece

80
00:06:01,880 --> 00:06:03,990
com o log do console.

81
00:06:04,640 --> 00:06:07,870
OK para que eu possa atualizar a pgina e vejo meus dois logs de console aqui.

82
00:06:07,880 --> 00:06:08,950
Fantstico.

83
00:06:09,020 --> 00:06:10,560
Se voc vir alguma mensagem de erro.

84
00:06:10,580 --> 00:06:15,830
Lembre-se de verificar seu terminal e certifique-se de que voc no possui erros de digitao ou qualquer coisa

85
00:06:15,830 --> 00:06:17,460
que seja relatada pelo terminal.

86
00:06:19,190 --> 00:06:21,930
Ento, vamos ver o primeiro log do console aqui.

87
00:06:21,930 --> 00:06:23,710
Voc sabe expandir o assunto.

88
00:06:23,910 --> 00:06:27,300
Ento lembre-se que este  o objeto do nosso prop que estamos trabalhando aqui.

89
00:06:27,380 --> 00:06:31,840
Ento, parece que o objeto props tem uma nica propriedade atribuda a ela chamada dados.

90
00:06:32,090 --> 00:06:33,420
E se expandimos os dados.

91
00:06:33,710 --> 00:06:34,020
EST BEM.

92
00:06:34,040 --> 00:06:37,120
Bem, parece que h um monte de coisas interessantes aqui.

93
00:06:37,120 --> 00:06:39,280
Eu vejo o ar que  indefinido.

94
00:06:39,290 --> 00:06:40,640
Isso provavelmente  bom.

95
00:06:40,670 --> 00:06:42,750
Diz que o carregamento  verdadeiro.

96
00:06:42,770 --> 00:06:45,660
Portanto, presumivelmente isso significa que a consulta ainda est em andamento.

97
00:06:45,680 --> 00:06:48,250
Portanto, nenhum dado foi obtido.

98
00:06:48,260 --> 00:06:53,330
Vamos dar uma olhada nas segundas toneladas de log e ver se h algo interessante sobre isso.

99
00:06:53,960 --> 00:06:57,850
Ento, no segundo registro, vejo o carregamento de falso.

100
00:06:57,950 --> 00:07:01,440
Portanto, presumivelmente, a consulta foi concluda com sucesso.

101
00:07:01,640 --> 00:07:06,480
Se olharmos um pouco para baixo, voc notar que temos uma propriedade de msica aqui.

102
00:07:06,740 --> 00:07:12,740
Se eu expandir msicas para fora  uma matriz com um objeto dentro dela e eu posso ver o ttulo da

103
00:07:12,740 --> 00:07:14,260
msica que eu realmente recebi.

104
00:07:14,510 --> 00:07:15,320
Ento  isso.

105
00:07:15,320 --> 00:07:18,830
 assim que obtemos acesso aos nossos dados dentro de um grfico.

106
00:07:18,830 --> 00:07:25,580
Q El componente habilitado, ns olhamos esses objetos de coisas, comeamos dados e, em seguida, a propriedade que buscamos no

107
00:07:25,670 --> 00:07:27,250
grfico que todos voc consulta.

108
00:07:27,410 --> 00:07:30,030
Neste caso, msicas.

109
00:07:30,050 --> 00:07:34,640
Uma coisa que  realmente importante que eu quero apontar para voc 

110
00:07:34,640 --> 00:07:43,190
que voc notar no registro inicial do console que no temos uma propriedade chamada Songs para que as msicas s estejam disponveis aps a

111
00:07:43,190 --> 00:07:44,360
consulta ter sido concluda.

112
00:07:44,390 --> 00:07:49,820
passadas para isso, podemos encontrar algum tipo de erro onde talvez as msicas ainda no tenham sido buscadas.

113
00:07:49,820 --> 00:07:54,360
Isso  realmente importante porque se nosso componente sempre assume que as msicas esto sendo

114
00:07:54,410 --> 00:07:58,120
E eu meio que suspeito de que possamos encontrar essa questo.

115
00:07:58,140 --> 00:08:01,080
Comeamos a tentar trabalhar com esses dados.

116
00:08:01,100 --> 00:08:05,900
Ento, falando sobre o qual voc sabe falar de trabalhar com esses dados, vamos fazer uma pausa rpida.

117
00:08:06,020 --> 00:08:11,780
Vamos voltar e ento vamos melhorar o nosso componente da lista de msicas e ter certeza de

118
00:08:11,870 --> 00:08:16,280
que podemos renderizar uma msica para cheirar e dentro do nosso documento real.

119
00:08:16,310 --> 00:08:18,240
Ento vamos cuidar disso na prxima seo.

