1
00:00:00,780 --> 00:00:05,550
In the last section we started working on our required off higher order component.

2
00:00:05,730 --> 00:00:12,120
At this point in time we've got just a regular component and it checks to see whether or not the user

3
00:00:12,120 --> 00:00:13,590
is currently signed in.

4
00:00:13,770 --> 00:00:19,210
If they're currently not authenticated we send them over to the log in route.

5
00:00:19,290 --> 00:00:21,560
At this point again it's just a component.

6
00:00:21,570 --> 00:00:24,810
We still have to turn it into a higher order component.

7
00:00:25,020 --> 00:00:29,670
So this is where some of the magic behind higher order components is going to come into play.

8
00:00:29,700 --> 00:00:32,880
I'm not going to talk too much about what's going on with higher components here.

9
00:00:32,880 --> 00:00:38,640
Again if you want to learn just a ton about them you can check out my re-act redux course the advanced

10
00:00:38,640 --> 00:00:44,610
one or you of course can always check out tons of tutorials online that will tell you a lot about higher

11
00:00:44,610 --> 00:00:46,800
order components and how they work.

12
00:00:46,890 --> 00:00:51,100
So I'm not trying to plug my course here on on purpose or anything like that.

13
00:00:51,240 --> 00:00:55,890
I know that if you take the course you learn about higher order components but certainly there are a

14
00:00:55,890 --> 00:01:00,320
ton of resources out there to help you understand exactly how they work.

15
00:01:00,330 --> 00:01:05,110
So this next part is going to be a little bit arcane You know but hey let's get through it.

16
00:01:05,190 --> 00:01:15,080
We're going to turn our component into a function that takes a wrapped component like so we're then

17
00:01:15,080 --> 00:01:21,630
going to wrap the component we just created with the function that we just defined at the bottom.

18
00:01:21,650 --> 00:01:27,120
We're going to return the graph qualified version of the required off component.

19
00:01:27,350 --> 00:01:31,970
So I'm making sure I've got the return statement down here and then the last thing we need to do is

20
00:01:31,970 --> 00:01:43,860
add in our render method and make sure that we say return the rep component along with any props that

21
00:01:43,860 --> 00:01:47,270
the higher order component was passed.

22
00:01:47,580 --> 00:01:48,170
OK.

23
00:01:48,260 --> 00:01:53,030
So again you're not familiar with the I know said this like four times now if you're not from the higher

24
00:01:53,030 --> 00:01:56,150
components everything we just did is going to be a little bit mysterious.

25
00:01:56,270 --> 00:01:58,620
I really recommend you take five 10 minutes.

26
00:01:58,610 --> 00:02:02,260
Go check out a tutorial on higher order components if you're not familiar with them.

27
00:02:02,360 --> 00:02:05,040
I bet you'll pick up what's going on with them pretty quickly.

28
00:02:05,150 --> 00:02:08,050
If you've made it this far into this draft you of course.

29
00:02:08,620 --> 00:02:14,060
OK so I think we've got just about enough code on the screen to give us a test out inside the browser.

30
00:02:14,240 --> 00:02:17,400
I really expect this to not work the way we expect.

31
00:02:17,420 --> 00:02:22,040
I'm going to say that right now I really don't expect it to work the way we expect but I want to just

32
00:02:22,040 --> 00:02:25,100
test it out and see how we're doing.

33
00:02:25,310 --> 00:02:31,760
So the first thing we have to do is actually apply the require Auth. higher order components somewhere

34
00:02:31,760 --> 00:02:33,410
inside of our application.

35
00:02:33,710 --> 00:02:38,690
So the only location inside of our application right now where I would want to use this thing is on

36
00:02:38,690 --> 00:02:41,800
the dashboard component that we just created.

37
00:02:41,870 --> 00:02:48,480
So I'm going to flip over to the router side of the index not just file yours and next start G-S.

38
00:02:48,620 --> 00:02:54,170
We're going to import the require off higher order component and then we're going to apply it to the

39
00:02:54,170 --> 00:02:56,960
dashboard component that we just created.

40
00:02:56,960 --> 00:03:06,560
So import require off from components require off like so and then I want to apply it to the dashboard

41
00:03:06,560 --> 00:03:09,950
component wherever the dashboard component gets used.

42
00:03:10,130 --> 00:03:15,370
So the best location to do that is down inside of our route definition for the dashboard.

43
00:03:15,470 --> 00:03:17,610
So we'll scroll down just a little bit.

44
00:03:17,670 --> 00:03:20,360
We'll find the route for the dashboard component.

45
00:03:20,360 --> 00:03:21,650
Here it is.

46
00:03:21,650 --> 00:03:28,930
And I'm going to apply the higher order component to the dashboard.

47
00:03:29,120 --> 00:03:30,390
So we take the dashboard.

48
00:03:30,620 --> 00:03:33,440
We pass it into the required function.

49
00:03:33,470 --> 00:03:36,010
So let's flip over to the require off file.

50
00:03:36,020 --> 00:03:37,170
Here it is right here.

51
00:03:37,490 --> 00:03:42,370
So the dashboard is coming in as the wrapped component.

52
00:03:43,070 --> 00:03:45,380
We create our new required off components.

53
00:03:45,380 --> 00:03:49,680
It's going to do some fancy logic to figure out whether or not the user is currently authenticated.

54
00:03:49,790 --> 00:03:54,620
And then it will end up showing the dashboard so wrapped computing right here ends up being the dashboard.

55
00:03:54,620 --> 00:03:59,550
And again this comes down to a little bit around how higher order components work.

56
00:03:59,660 --> 00:04:02,780
So I think we've got enough code to test this out inside the browser.

57
00:04:02,780 --> 00:04:05,020
Let's flip over and see how we're doing.

58
00:04:05,540 --> 00:04:06,620
It's going to come on over.

59
00:04:06,650 --> 00:04:12,880
Let's refresh the page and I still am seeing you are logged in right now.

60
00:04:13,040 --> 00:04:13,560
OK.

61
00:04:13,700 --> 00:04:17,060
Well that definitely does not seem the way we expect.

62
00:04:17,060 --> 00:04:22,580
So let's try logging in and see if maybe that process is going to be a little bit better.

63
00:04:22,580 --> 00:04:30,710
So logging in with test at test dot com and password lets submit I'm now logged in.

64
00:04:30,790 --> 00:04:32,470
What happens if I log out.

65
00:04:32,770 --> 00:04:33,140
OK.

66
00:04:33,160 --> 00:04:38,160
So looks like our higher order component is not quite working the way we expect right now.

67
00:04:38,170 --> 00:04:42,130
Let's take a quick break and we're going to do a little bit of trouble shooting and figure out exactly

68
00:04:42,130 --> 00:04:46,840
why this thing isn't doing even remotely what we want it to do.

69
00:04:46,840 --> 00:04:51,610
And it's going to come down to understanding a little bit more about how graphical queries are executed

70
00:04:51,940 --> 00:04:56,140
and how a couple of different lifecycle methods inside of react work.

71
00:04:56,140 --> 00:05:00,100
So it's going to be a nice learning opportunity for Graf to react.

72
00:05:00,160 --> 00:05:01,810
So sick care of it in the next section.

